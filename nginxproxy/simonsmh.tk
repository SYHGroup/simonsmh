#One line add to nginx.conf
#include /var/www/simonsmh/nginxproxy/*;
#enable ssl in all secon domain server require letsencrypt installed
#service nginx stop && certbot certonly --standalone --email simonsmh@gmail.com -d simonsmh.cc -d app.simonsmh.cc -d www.simonsmh.cc -d blog.simonsmh.cc -d tieba.simonsmh.cc -d openwrt.simonsmh.cc -d dist.simonsmh.cc -d bt.simonsmh.cc -d pan.simonsmh.cc -d url.simonsmh.cc -d ipv6.simonsmh.cc -d ports.simonsmh.cc -d wiki.simonsmh.cc -d zh.wiki.simonsmh.cc -d zh.m.wiki.simonsmh.cc -d en.wiki.simonsmh.cc -d en.m.wiki.simonsmh.cc -d ja.wiki.simonsmh.cc -d ja.m.wiki.simonsmh.cc && service nginx restart
#expire on 2016-10-18
#add "--server https://acme-staging.api.letsencrypt.org/directory" to avoid rate limit problem.
#SSL Settings
ssl_certificate /etc/letsencrypt/live/simonsmh.cc/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/simonsmh.cc/privkey.pem;
ssl_session_timeout 60m;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';
ssl_session_cache builtin:1000 shared:SSL:20m;
add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
server {
listen 80;
listen [::]:80;
server_name simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name ipv6.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name app.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name tieba.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name bt.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name pan.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name url.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name url.simonsmh.cc;
return 301 $args;
}
#defalt
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name app.simonsmh.cc www.simonsmh.cc ipv6.simonsmh.cc;
root /var/www/simonsmh; 
index index.php;
#redir to file dir, not using link
location ~ /(files|sfiles)/ {
root /var/wwwfiles/; 
}
#Disable upload&run .php files
location ~ ^/(files|sfiles)/.*\.php(\/.*)*$
{
deny all; 
}
#Fix Access-Control-Allow-Origin for glype
location / {
add_header Access-Control-Allow-Origin *;
}
location ~ .*\.php(\/.*)*$ {
set $path_info "";
fastcgi_split_path_info ^(.+\.php)(/.+)$;
fastcgi_pass unix:/run/php/php7.0-fpm.sock;
fastcgi_index index.php;
include fastcgi_params;
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
fastcgi_param SCRIPT_NAME $fastcgi_script_name;
fastcgi_param PATH_INFO $path_info;
}
location ~* ^.+\.(eot|ttf|otf|woff|svg|woff2)$ {
access_log off;
expires max;
}
error_page  310 /310.php;
error_page  401 /401.php;
error_page  403 /403.php;
error_page  404 /404.php;
error_page  502 /502.php;
}

#blog.simonsmh.cc
server {
listen 443 ssl;
listen [::]:443 ssl;
root /var/www/blog.simonsmh;
index index.php index.html index.htm;
server_name simonsmh.cc blog.simonsmh.cc;
if (!-e $request_filename) {
rewrite ^(.*)$ /index.php$1 last;
}
location ~ .*\.php(\/.*)*$ {
set $path_info "";
fastcgi_split_path_info ^(.+\.php)(/.+)$;
fastcgi_pass unix:/run/php/php7.0-fpm.sock;
fastcgi_index index.php;
include fastcgi_params;
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
fastcgi_param SCRIPT_NAME $fastcgi_script_name;
fastcgi_param PATH_INFO $path_info;
}
}

#tieba
server {
listen 443 ssl;
listen [::]:443 ssl;
root /var/www/tieba.simonsmh;
index index.php index.html index.htm;
server_name tieba.simonsmh.cc;
location ~ .*\.php(\/.*)*$ {
set $path_info "";
fastcgi_split_path_info ^(.+\.php)(/.+)$;
fastcgi_pass unix:/run/php/php7.0-fpm.sock;
fastcgi_index index.php;
include fastcgi_params;
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
fastcgi_param SCRIPT_NAME $fastcgi_script_name;
fastcgi_param PATH_INFO $path_info;
}
}

#transmission
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name bt.simonsmh.cc;
location /{
proxy_pass http://127.0.0.1:9091;
proxy_set_header Accept-Encoding "";
proxy_pass_header  X-Transmission-Session-Id;
}
}

#seafiles
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name pan.simonsmh.cc;
location /{
proxy_pass http://127.0.0.1:8000;
proxy_set_header Accept-Encoding "";
}
}

#openwrt
server {
listen 80;
listen [::]:80;
server_name openwrt.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name openwrt.simonsmh.cc;
location /{
proxy_redirect http://downloads.openwrt.org/ /;
proxy_pass http://downloads.openwrt.org;
proxy_set_header Accept-Encoding "";
sub_filter downloads.openwrt.org openwrt.simonsmh.cc;
}
}

#ubuntu
server {
listen 80;
listen [::]:80;
server_name ports.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name ports.simonsmh.cc;
location /{
proxy_redirect http://ports.ubuntu.com/ /;
proxy_pass http://ports.ubuntu.com;
proxy_set_header Accept-Encoding "";
sub_filter ports.ubuntu.com ports.simonsmh.cc;
}
}

#wikipedia welcome page
server {
listen 80;
listen [::]:80;
server_name wiki.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name zh.wiki.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name zh.m.wiki.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name en.wiki.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name en.m.wiki.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name ja.wiki.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 80;
listen [::]:80;
server_name ja.m.wiki.simonsmh.cc;
return 301 https://$server_name$request_uri;
}
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name wiki.simonsmh.cc;
location /{
proxy_redirect https://www.wikipedia.org/ /;
proxy_redirect http://www.wikipedia.org/ /;
proxy_pass https://www.wikipedia.org;
proxy_set_header Accept-Encoding "";
#subs_filter www.wikipedia.org wiki.simonsmh.cc r;
#fit below supported languages
#subs_filter zh.wikipedia.org zh.wiki.simonsmh.cc r;
#subs_filter zh.m.wikipedia.org zh.m.wiki.simonsmh.cc r;
#subs_filter en.wikipedia.org en.wiki.simonsmh.cc r;
#subs_filter en.m.wikipedia.org en.m.wiki.simonsmh.cc r;
#subs_filter ja.wikipedia.org ja.wiki.simonsmh.cc r;
#subs_filter ja.m.wikipedia.org ja.m.wiki.simonsmh.cc r;
}
}

#wiki-chinese and wikim-chinese
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name zh.wiki.simonsmh.cc;
location /{
proxy_redirect https://zh.wikipedia.org/ /;
proxy_redirect http://zh.wikipedia.org/ /;
proxy_pass https://zh.wikipedia.org;
proxy_set_header Accept-Encoding "";
#subs_filter zh.wikipedia.org zh.wiki.simonsmh.cc r;
#subs_filter zh.m.wikipedia.org zh.m.wiki.simonsmh.cc r;
}
}
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name zh.m.wiki.simonsmh.cc;
location /{
proxy_redirect https://zh.m.wikipedia.org/ /;
proxy_redirect http://zh.m.wikipedia.org/ /;
proxy_pass https://zh.m.wikipedia.org;
proxy_set_header Accept-Encoding "";
#subs_filter zh.wikipedia.org zh.wiki.simonsmh.cc r;
#subs_filter zh.m.wikipedia.org zh.m.wiki.simonsmh.cc r;
}
}

#wiki-other language
#wiki-english and wikim-english
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name en.wiki.simonsmh.cc;
location /{
proxy_redirect https://en.wikipedia.org/ /;
proxy_redirect http://en.wikipedia.org/ /;
proxy_pass https://en.wikipedia.org;
proxy_set_header Accept-Encoding "";
#subs_filter en.wikipedia.org en.wiki.simonsmh.cc r;
#subs_filter en.m.wikipedia.org en.m.wiki.simonsmh.cc r;
}
}
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name en.m.wiki.simonsmh.cc;
location /{
proxy_redirect https://en.m.wikipedia.org/ /;
proxy_redirect http://en.m.wikipedia.org/ /;
proxy_pass https://en.m.wikipedia.org;
proxy_set_header Accept-Encoding "";
#subs_filter en.wikipedia.org en.wiki.simonsmh.cc r;
#subs_filter en.m.wikipedia.org en.m.wiki.simonsmh.cc r;
}
}

#wiki-japan and wikim-japan
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name ja.wiki.simonsmh.cc;
location /{
proxy_redirect https://ja.wikipedia.org/ /;
proxy_redirect http://ja.wikipedia.org/ /;
proxy_pass https://ja.wikipedia.org;
proxy_set_header Accept-Encoding "";
#subs_filter ja.wikipedia.org ja.wiki.simonsmh.cc r;
#subs_filter ja.m.wikipedia.org ja.m.wiki.simonsmh.cc r;
}
}
server {
listen 443 ssl;
listen [::]:443 ssl;
server_name ja.m.wiki.simonsmh.cc;
location /{
proxy_redirect https://ja.m.wikipedia.org/ /;
proxy_redirect http://ja.m.wikipedia.org/ /;
proxy_pass https://ja.m.wikipedia.org;
proxy_set_header Accept-Encoding "";
#subs_filter ja.wikipedia.org ja.wiki.simonsmh.cc r;
#subs_filter ja.m.wikipedia.org ja.m.wiki.simonsmh.cc r;
}
}

